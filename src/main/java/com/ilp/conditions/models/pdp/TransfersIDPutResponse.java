/*
 * PDP FSP API (Implementation Friendly Version)
 * DRAFT FOR INTERNAL REVIEW ONLY - Based on API Definition.docx updated on 2017-07-06 - Implementation friendly version. [Changes from pervious version (2.7) - maxLength changed to 48 from 32 for IlpCondition and IlpFulfilment Types.]
 *
 * OpenAPI spec version: 2.8
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.ilp.conditions.models.pdp;

import java.util.Objects;

/**
 * PUT /transfers/{ID} object
 */
public class TransfersIDPutResponse {

  private String fulfilment = null;

  private String completedTimestamp = null;

  private String transferState = null;

  private ExtensionList extensionList = null;

  public TransfersIDPutResponse fulfilment(String fulfilment) {
    this.fulfilment = fulfilment;
    return this;
  }

   /**
   * Fulfilment of the condition specified with the transaction. Mandatory if transfer has completed successfully.
   * @return fulfilment
  **/
  public String getFulfilment() {
    return fulfilment;
  }

  public void setFulfilment(String fulfilment) {
    this.fulfilment = fulfilment;
  }

  public TransfersIDPutResponse completedTimestamp(String completedTimestamp) {
    this.completedTimestamp = completedTimestamp;
    return this;
  }

   /**
   * Time and date when the transaction was completed.
   * @return completedTimestamp
  **/
  public String getCompletedTimestamp() {
    return completedTimestamp;
  }

  public void setCompletedTimestamp(String completedTimestamp) {
    this.completedTimestamp = completedTimestamp;
  }

  public TransfersIDPutResponse transferState(String transferState) {
    this.transferState = transferState;
    return this;
  }

   /**
   * State of the transfer.
   * @return transferState
  **/
  public String getTransferState() {
    return transferState;
  }

  public void setTransferState(String transferState) {
    this.transferState = transferState;
  }

  public TransfersIDPutResponse extensionList(ExtensionList extensionList) {
    this.extensionList = extensionList;
    return this;
  }

   /**
   * Get extensionList
   * @return extensionList
  **/
  public ExtensionList getExtensionList() {
    return extensionList;
  }

  public void setExtensionList(ExtensionList extensionList) {
    this.extensionList = extensionList;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TransfersIDPutResponse transfersIDPutResponse = (TransfersIDPutResponse) o;
    return Objects.equals(this.fulfilment, transfersIDPutResponse.fulfilment) &&
        Objects.equals(this.completedTimestamp, transfersIDPutResponse.completedTimestamp) &&
        Objects.equals(this.transferState, transfersIDPutResponse.transferState) &&
        Objects.equals(this.extensionList, transfersIDPutResponse.extensionList);
  }

  @Override
  public int hashCode() {
    return Objects.hash(fulfilment, completedTimestamp, transferState, extensionList);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TransfersIDPutResponse {\n");
    
    sb.append("    fulfilment: ").append(toIndentedString(fulfilment)).append("\n");
    sb.append("    completedTimestamp: ").append(toIndentedString(completedTimestamp)).append("\n");
    sb.append("    transferState: ").append(toIndentedString(transferState)).append("\n");
    sb.append("    extensionList: ").append(toIndentedString(extensionList)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}
