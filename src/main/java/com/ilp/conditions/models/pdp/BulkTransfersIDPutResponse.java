/*
 * PDP FSP API (Implementation Friendly Version)
 * DRAFT FOR INTERNAL REVIEW ONLY - Based on API Definition.docx updated on 2017-07-06 - Implementation friendly version. [Changes from pervious version (2.7) - maxLength changed to 48 from 32 for IlpCondition and IlpFulfilment Types.]
 *
 * OpenAPI spec version: 2.8
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.ilp.conditions.models.pdp;

import java.util.Objects;
import java.util.ArrayList;
import java.util.List;

/**
 * PUT /bulkTransfers/{ID} object
 */
public class BulkTransfersIDPutResponse {

  private String completedTimestamp = null;

  private List<IndividualTransferResult> individualTransferResults = null;

  private String bulkTransferState = null;

  private ExtensionList extensionList = null;

  public BulkTransfersIDPutResponse completedTimestamp(String completedTimestamp) {
    this.completedTimestamp = completedTimestamp;
    return this;
  }

   /**
   * Time and date when the bulk transaction was completed.
   * @return completedTimestamp
  **/
  public String getCompletedTimestamp() {
    return completedTimestamp;
  }

  public void setCompletedTimestamp(String completedTimestamp) {
    this.completedTimestamp = completedTimestamp;
  }

  public BulkTransfersIDPutResponse individualTransferResults(List<IndividualTransferResult> individualTransferResults) {
    this.individualTransferResults = individualTransferResults;
    return this;
  }

  public BulkTransfersIDPutResponse addIndividualTransferResultsItem(IndividualTransferResult individualTransferResultsItem) {
    if (this.individualTransferResults == null) {
      this.individualTransferResults = new ArrayList<IndividualTransferResult>();
    }
    this.individualTransferResults.add(individualTransferResultsItem);
    return this;
  }

   /**
   * List of IndividualTransferResult elements.
   * @return individualTransferResults
  **/
  public List<IndividualTransferResult> getIndividualTransferResults() {
    return individualTransferResults;
  }

  public void setIndividualTransferResults(List<IndividualTransferResult> individualTransferResults) {
    this.individualTransferResults = individualTransferResults;
  }

  public BulkTransfersIDPutResponse bulkTransferState(String bulkTransferState) {
    this.bulkTransferState = bulkTransferState;
    return this;
  }

   /**
   * The state of the bulk transfer.
   * @return bulkTransferState
  **/
  public String getBulkTransferState() {
    return bulkTransferState;
  }

  public void setBulkTransferState(String bulkTransferState) {
    this.bulkTransferState = bulkTransferState;
  }

  public BulkTransfersIDPutResponse extensionList(ExtensionList extensionList) {
    this.extensionList = extensionList;
    return this;
  }

   /**
   * Get extensionList
   * @return extensionList
  **/
  public ExtensionList getExtensionList() {
    return extensionList;
  }

  public void setExtensionList(ExtensionList extensionList) {
    this.extensionList = extensionList;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BulkTransfersIDPutResponse bulkTransfersIDPutResponse = (BulkTransfersIDPutResponse) o;
    return Objects.equals(this.completedTimestamp, bulkTransfersIDPutResponse.completedTimestamp) &&
        Objects.equals(this.individualTransferResults, bulkTransfersIDPutResponse.individualTransferResults) &&
        Objects.equals(this.bulkTransferState, bulkTransfersIDPutResponse.bulkTransferState) &&
        Objects.equals(this.extensionList, bulkTransfersIDPutResponse.extensionList);
  }

  @Override
  public int hashCode() {
    return Objects.hash(completedTimestamp, individualTransferResults, bulkTransferState, extensionList);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BulkTransfersIDPutResponse {\n");
    
    sb.append("    completedTimestamp: ").append(toIndentedString(completedTimestamp)).append("\n");
    sb.append("    individualTransferResults: ").append(toIndentedString(individualTransferResults)).append("\n");
    sb.append("    bulkTransferState: ").append(toIndentedString(bulkTransferState)).append("\n");
    sb.append("    extensionList: ").append(toIndentedString(extensionList)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}
