/*
 * PDP FSP API (Implementation Friendly Version)
 * DRAFT FOR INTERNAL REVIEW ONLY - Based on API Definition.docx updated on 2017-07-06 - Implementation friendly version. [Changes from pervious version (2.7) - maxLength changed to 48 from 32 for IlpCondition and IlpFulfilment Types.]
 *
 * OpenAPI spec version: 2.8
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.ilp.conditions.models.pdp;

import java.util.Objects;
import java.util.ArrayList;
import java.util.List;

/**
 * POST /bulkTransfers object
 */
public class BulkTransfersPostRequest {

  private String bulkTransferId = null;

  private String bulkQuoteId = null;

  private String payerFsp = null;

  private String payeeFsp = null;

  private List<IndividualTransfer> individualTransfers = new ArrayList<IndividualTransfer>();

  private String expiration = null;

  private ExtensionList extensionList = null;

  public BulkTransfersPostRequest bulkTransferId(String bulkTransferId) {
    this.bulkTransferId = bulkTransferId;
    return this;
  }

   /**
   * Common ID between the FSPs and the optional Switch for the bulk transfer object, decided by the Payer FSP. The ID should be reused for resends of the same bulk transfer. A new ID should be generated for each new bulk transfer.
   * @return bulkTransferId
  **/
  public String getBulkTransferId() {
    return bulkTransferId;
  }

  public void setBulkTransferId(String bulkTransferId) {
    this.bulkTransferId = bulkTransferId;
  }

  public BulkTransfersPostRequest bulkQuoteId(String bulkQuoteId) {
    this.bulkQuoteId = bulkQuoteId;
    return this;
  }

   /**
   * ID of the related bulk quote.
   * @return bulkQuoteId
  **/
  public String getBulkQuoteId() {
    return bulkQuoteId;
  }

  public void setBulkQuoteId(String bulkQuoteId) {
    this.bulkQuoteId = bulkQuoteId;
  }

  public BulkTransfersPostRequest payerFsp(String payerFsp) {
    this.payerFsp = payerFsp;
    return this;
  }

   /**
   * Payer FSP identifier.
   * @return payerFsp
  **/
  public String getPayerFsp() {
    return payerFsp;
  }

  public void setPayerFsp(String payerFsp) {
    this.payerFsp = payerFsp;
  }

  public BulkTransfersPostRequest payeeFsp(String payeeFsp) {
    this.payeeFsp = payeeFsp;
    return this;
  }

   /**
   * Payee FSP identifier.
   * @return payeeFsp
  **/
  public String getPayeeFsp() {
    return payeeFsp;
  }

  public void setPayeeFsp(String payeeFsp) {
    this.payeeFsp = payeeFsp;
  }

  public BulkTransfersPostRequest individualTransfers(List<IndividualTransfer> individualTransfers) {
    this.individualTransfers = individualTransfers;
    return this;
  }

  public BulkTransfersPostRequest addIndividualTransfersItem(IndividualTransfer individualTransfersItem) {
    this.individualTransfers.add(individualTransfersItem);
    return this;
  }

   /**
   * List of IndividualTransfer elements.
   * @return individualTransfers
  **/
  public List<IndividualTransfer> getIndividualTransfers() {
    return individualTransfers;
  }

  public void setIndividualTransfers(List<IndividualTransfer> individualTransfers) {
    this.individualTransfers = individualTransfers;
  }

  public BulkTransfersPostRequest expiration(String expiration) {
    this.expiration = expiration;
    return this;
  }

   /**
   * Expiration time of the transfers.
   * @return expiration
  **/
  public String getExpiration() {
    return expiration;
  }

  public void setExpiration(String expiration) {
    this.expiration = expiration;
  }

  public BulkTransfersPostRequest extensionList(ExtensionList extensionList) {
    this.extensionList = extensionList;
    return this;
  }

   /**
   * Get extensionList
   * @return extensionList
  **/
  public ExtensionList getExtensionList() {
    return extensionList;
  }

  public void setExtensionList(ExtensionList extensionList) {
    this.extensionList = extensionList;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BulkTransfersPostRequest bulkTransfersPostRequest = (BulkTransfersPostRequest) o;
    return Objects.equals(this.bulkTransferId, bulkTransfersPostRequest.bulkTransferId) &&
        Objects.equals(this.bulkQuoteId, bulkTransfersPostRequest.bulkQuoteId) &&
        Objects.equals(this.payerFsp, bulkTransfersPostRequest.payerFsp) &&
        Objects.equals(this.payeeFsp, bulkTransfersPostRequest.payeeFsp) &&
        Objects.equals(this.individualTransfers, bulkTransfersPostRequest.individualTransfers) &&
        Objects.equals(this.expiration, bulkTransfersPostRequest.expiration) &&
        Objects.equals(this.extensionList, bulkTransfersPostRequest.extensionList);
  }

  @Override
  public int hashCode() {
    return Objects.hash(bulkTransferId, bulkQuoteId, payerFsp, payeeFsp, individualTransfers, expiration, extensionList);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BulkTransfersPostRequest {\n");
    
    sb.append("    bulkTransferId: ").append(toIndentedString(bulkTransferId)).append("\n");
    sb.append("    bulkQuoteId: ").append(toIndentedString(bulkQuoteId)).append("\n");
    sb.append("    payerFsp: ").append(toIndentedString(payerFsp)).append("\n");
    sb.append("    payeeFsp: ").append(toIndentedString(payeeFsp)).append("\n");
    sb.append("    individualTransfers: ").append(toIndentedString(individualTransfers)).append("\n");
    sb.append("    expiration: ").append(toIndentedString(expiration)).append("\n");
    sb.append("    extensionList: ").append(toIndentedString(extensionList)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}
