/*
 * PDP FSP API (Implementation Friendly Version)
 * DRAFT FOR INTERNAL REVIEW ONLY - Based on API Definition.docx updated on 2017-07-06 - Implementation friendly version. [Changes from pervious version (2.7) - maxLength changed to 48 from 32 for IlpCondition and IlpFulfilment Types.]
 *
 * OpenAPI spec version: 2.8
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.ilp.conditions.models.pdp;

import java.util.Objects;

/**
 * Data model for the complex type IndividualTransferResult.
 */
public class IndividualTransferResult {

  private String transferId = null;

  private String fulfilment = null;

  private ErrorInformation errorInformation = null;

  private ExtensionList extensionList = null;

  public IndividualTransferResult transferId(String transferId) {
    this.transferId = transferId;
    return this;
  }

   /**
   * Identifies messages related to the same /transfers sequence.
   * @return transferId
  **/
  public String getTransferId() {
    return transferId;
  }

  public void setTransferId(String transferId) {
    this.transferId = transferId;
  }

  public IndividualTransferResult fulfilment(String fulfilment) {
    this.fulfilment = fulfilment;
    return this;
  }

   /**
   * Fulfilment of the condition specified with the transaction. Note - Either fulfilment or errorInformation should be set, not both.
   * @return fulfilment
  **/
  public String getFulfilment() {
    return fulfilment;
  }

  public void setFulfilment(String fulfilment) {
    this.fulfilment = fulfilment;
  }

  public IndividualTransferResult errorInformation(ErrorInformation errorInformation) {
    this.errorInformation = errorInformation;
    return this;
  }

   /**
   * Get errorInformation
   * @return errorInformation
  **/
  public ErrorInformation getErrorInformation() {
    return errorInformation;
  }

  public void setErrorInformation(ErrorInformation errorInformation) {
    this.errorInformation = errorInformation;
  }

  public IndividualTransferResult extensionList(ExtensionList extensionList) {
    this.extensionList = extensionList;
    return this;
  }

   /**
   * Get extensionList
   * @return extensionList
  **/
  public ExtensionList getExtensionList() {
    return extensionList;
  }

  public void setExtensionList(ExtensionList extensionList) {
    this.extensionList = extensionList;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IndividualTransferResult individualTransferResult = (IndividualTransferResult) o;
    return Objects.equals(this.transferId, individualTransferResult.transferId) &&
        Objects.equals(this.fulfilment, individualTransferResult.fulfilment) &&
        Objects.equals(this.errorInformation, individualTransferResult.errorInformation) &&
        Objects.equals(this.extensionList, individualTransferResult.extensionList);
  }

  @Override
  public int hashCode() {
    return Objects.hash(transferId, fulfilment, errorInformation, extensionList);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IndividualTransferResult {\n");
    
    sb.append("    transferId: ").append(toIndentedString(transferId)).append("\n");
    sb.append("    fulfilment: ").append(toIndentedString(fulfilment)).append("\n");
    sb.append("    errorInformation: ").append(toIndentedString(errorInformation)).append("\n");
    sb.append("    extensionList: ").append(toIndentedString(extensionList)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}
