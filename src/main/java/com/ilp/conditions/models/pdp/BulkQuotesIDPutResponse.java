/*
 * PDP FSP API (Implementation Friendly Version)
 * DRAFT FOR INTERNAL REVIEW ONLY - Based on API Definition.docx updated on 2017-07-06 - Implementation friendly version. [Changes from pervious version (2.7) - maxLength changed to 48 from 32 for IlpCondition and IlpFulfilment Types.]
 *
 * OpenAPI spec version: 2.8
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.ilp.conditions.models.pdp;

import java.util.Objects;
import java.util.ArrayList;
import java.util.List;

/**
 * PUT /bulkQuotes/{ID} object
 */
public class BulkQuotesIDPutResponse {

  private List<IndividualQuoteResult> individualQuotes = null;

  private String expiration = null;

  private ExtensionList extensionList = null;

  public BulkQuotesIDPutResponse individualQuotes(List<IndividualQuoteResult> individualQuotes) {
    this.individualQuotes = individualQuotes;
    return this;
  }

  public BulkQuotesIDPutResponse addIndividualQuotesItem(IndividualQuoteResult individualQuotesItem) {
    if (this.individualQuotes == null) {
      this.individualQuotes = new ArrayList<IndividualQuoteResult>();
    }
    this.individualQuotes.add(individualQuotesItem);
    return this;
  }

   /**
   * Fees for each individual transaction, if any of them are charged per transaction.
   * @return individualQuotes
  **/
  public List<IndividualQuoteResult> getIndividualQuotes() {
    return individualQuotes;
  }

  public void setIndividualQuotes(List<IndividualQuoteResult> individualQuotes) {
    this.individualQuotes = individualQuotes;
  }

  public BulkQuotesIDPutResponse expiration(String expiration) {
    this.expiration = expiration;
    return this;
  }

   /**
   * Date and time until when the quotation is valid and can be honored when used in the subsequent transaction request.
   * @return expiration
  **/
  public String getExpiration() {
    return expiration;
  }

  public void setExpiration(String expiration) {
    this.expiration = expiration;
  }

  public BulkQuotesIDPutResponse extensionList(ExtensionList extensionList) {
    this.extensionList = extensionList;
    return this;
  }

   /**
   * Get extensionList
   * @return extensionList
  **/
  public ExtensionList getExtensionList() {
    return extensionList;
  }

  public void setExtensionList(ExtensionList extensionList) {
    this.extensionList = extensionList;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BulkQuotesIDPutResponse bulkQuotesIDPutResponse = (BulkQuotesIDPutResponse) o;
    return Objects.equals(this.individualQuotes, bulkQuotesIDPutResponse.individualQuotes) &&
        Objects.equals(this.expiration, bulkQuotesIDPutResponse.expiration) &&
        Objects.equals(this.extensionList, bulkQuotesIDPutResponse.extensionList);
  }

  @Override
  public int hashCode() {
    return Objects.hash(individualQuotes, expiration, extensionList);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BulkQuotesIDPutResponse {\n");
    
    sb.append("    individualQuotes: ").append(toIndentedString(individualQuotes)).append("\n");
    sb.append("    expiration: ").append(toIndentedString(expiration)).append("\n");
    sb.append("    extensionList: ").append(toIndentedString(extensionList)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}
