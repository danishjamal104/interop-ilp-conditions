/*
 * PDP FSP API (Implementation Friendly Version)
 * DRAFT FOR INTERNAL REVIEW ONLY - Based on API Definition.docx updated on 2017-07-06 - Implementation friendly version. [Changes from pervious version (2.7) - maxLength changed to 48 from 32 for IlpCondition and IlpFulfilment Types.]
 *
 * OpenAPI spec version: 2.8
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.ilp.conditions.models.pdp;

import java.util.Objects;

/**
 * Data model for the complex type Party.
 */
public class Party {

  private PartyIdInfo partyIdInfo = null;

  private String merchantClassificationCode = null;

  private String name = null;

  private PartyPersonalInfo personalInfo = null;

  public Party partyIdInfo(PartyIdInfo partyIdInfo) {
    this.partyIdInfo = partyIdInfo;
    return this;
  }

   /**
   * Get partyIdInfo
   * @return partyIdInfo
  **/
  public PartyIdInfo getPartyIdInfo() {
    return partyIdInfo;
  }

  public void setPartyIdInfo(PartyIdInfo partyIdInfo) {
    this.partyIdInfo = partyIdInfo;
  }

  public Party merchantClassificationCode(String merchantClassificationCode) {
    this.merchantClassificationCode = merchantClassificationCode;
    return this;
  }

   /**
   * Used in the context of Payee Information, where the Payee happens to be a merchant accepting merchant payments.
   * @return merchantClassificationCode
  **/
  public String getMerchantClassificationCode() {
    return merchantClassificationCode;
  }

  public void setMerchantClassificationCode(String merchantClassificationCode) {
    this.merchantClassificationCode = merchantClassificationCode;
  }

  public Party name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Display name of the Party, could be a real name or a nick name.
   * @return name
  **/
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public Party personalInfo(PartyPersonalInfo personalInfo) {
    this.personalInfo = personalInfo;
    return this;
  }

   /**
   * Get personalInfo
   * @return personalInfo
  **/
  public PartyPersonalInfo getPersonalInfo() {
    return personalInfo;
  }

  public void setPersonalInfo(PartyPersonalInfo personalInfo) {
    this.personalInfo = personalInfo;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Party party = (Party) o;
    return Objects.equals(this.partyIdInfo, party.partyIdInfo) &&
        Objects.equals(this.merchantClassificationCode, party.merchantClassificationCode) &&
        Objects.equals(this.name, party.name) &&
        Objects.equals(this.personalInfo, party.personalInfo);
  }

  @Override
  public int hashCode() {
    return Objects.hash(partyIdInfo, merchantClassificationCode, name, personalInfo);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Party {\n");
    
    sb.append("    partyIdInfo: ").append(toIndentedString(partyIdInfo)).append("\n");
    sb.append("    merchantClassificationCode: ").append(toIndentedString(merchantClassificationCode)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    personalInfo: ").append(toIndentedString(personalInfo)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}
